# Copyright (c) 2024-present, FriendliAI Inc. All rights reserved.

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: friendli/schema/api/v1/codegen/completions.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from __future__ import annotations

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n0friendli/schema/api/v1/codegen/completions.proto\x12\x04orca"\xe1\x0f\n\x14V1CompletionsRequest\x12\x13\n\x06stream\x18\x01 \x01(\x08H\x00\x88\x01\x01\x12\x12\n\x05model\x18\x02 \x01(\tH\x01\x88\x01\x01\x12\x13\n\x06prompt\x18\x03 \x01(\tH\x02\x88\x01\x01\x12\x0e\n\x06tokens\x18\x04 \x03(\x05\x12!\n\x14timeout_microseconds\x18\x05 \x01(\x05H\x03\x88\x01\x01\x12\x17\n\nmax_tokens\x18\x06 \x01(\x05H\x04\x88\x01\x01\x12\x1d\n\x10max_total_tokens\x18\x07 \x01(\x05H\x05\x88\x01\x01\x12\x17\n\nmin_tokens\x18\x08 \x01(\x05H\x06\x88\x01\x01\x12\x1d\n\x10min_total_tokens\x18\t \x01(\x05H\x07\x88\x01\x01\x12\x0e\n\x01n\x18\n \x01(\x05H\x08\x88\x01\x01\x12\x16\n\tnum_beams\x18\x0b \x01(\x05H\t\x88\x01\x01\x12\x1b\n\x0elength_penalty\x18\x0c \x01(\x02H\n\x88\x01\x01\x12\x1b\n\x0e\x65\x61rly_stopping\x18\r \x01(\x08H\x0b\x88\x01\x01\x12\x1c\n\x0fno_repeat_ngram\x18\x0e \x01(\x05H\x0c\x88\x01\x01\x12$\n\x17\x65ncoder_no_repeat_ngram\x18\x0f \x01(\x05H\r\x88\x01\x01\x12\x1f\n\x12repetition_penalty\x18\x10 \x01(\x02H\x0e\x88\x01\x01\x12\'\n\x1a\x65ncoder_repetition_penalty\x18\x11 \x01(\x02H\x0f\x88\x01\x01\x12\x1e\n\x11\x66requency_penalty\x18\x12 \x01(\x02H\x10\x88\x01\x01\x12\x1d\n\x10presence_penalty\x18\x13 \x01(\x02H\x11\x88\x01\x01\x12\x18\n\x0btemperature\x18\x14 \x01(\x02H\x12\x88\x01\x01\x12\x12\n\x05top_k\x18\x15 \x01(\x05H\x13\x88\x01\x01\x12\x12\n\x05top_p\x18\x16 \x01(\x02H\x14\x88\x01\x01\x12\x0c\n\x04stop\x18\x17 \x03(\t\x12=\n\x0bstop_tokens\x18\x18 \x03(\x0b\x32(.orca.V1CompletionsRequest.TokenSequence\x12\x0c\n\x04seed\x18\x19 \x03(\x04\x12\x1e\n\x16token_index_to_replace\x18\x1a \x03(\x05\x12\x1c\n\x14\x65mbedding_to_replace\x18\x1b \x03(\x02\x12H\n\x10\x62\x65\x61m_search_type\x18\x1c \x01(\x0e\x32).orca.V1CompletionsRequest.BeamSearchTypeH\x15\x88\x01\x01\x12*\n\x1d\x62\x65\x61m_compat_pre_normalization\x18\x1d \x01(\x08H\x16\x88\x01\x01\x12.\n!beam_compat_no_post_normalization\x18\x1e \x01(\x08H\x17\x88\x01\x01\x12\x11\n\tbad_words\x18\x1f \x03(\t\x12\x41\n\x0f\x62\x61\x64_word_tokens\x18  \x03(\x0b\x32(.orca.V1CompletionsRequest.TokenSequence\x12"\n\x15include_output_logits\x18! \x01(\x08H\x18\x88\x01\x01\x12$\n\x17include_output_logprobs\x18" \x01(\x08H\x19\x88\x01\x01\x12\x1c\n\x14\x66orced_output_tokens\x18# \x03(\x05\x12\x11\n\teos_token\x18$ \x03(\x05\x12G\n\x0fresponse_format\x18% \x01(\x0b\x32).orca.V1CompletionsRequest.ResponseFormatH\x1a\x88\x01\x01\x1a\x1f\n\rTokenSequence\x12\x0e\n\x06tokens\x18\x01 \x03(\x05\x1a\x9c\x01\n\x0eResponseFormat\x12<\n\x04type\x18\x01 \x01(\x0e\x32..orca.V1CompletionsRequest.ResponseFormat.Type\x12\x13\n\x06schema\x18\x02 \x01(\tH\x00\x88\x01\x01",\n\x04Type\x12\x08\n\x04text\x10\x00\x12\x0f\n\x0bjson_object\x10\x01\x12\t\n\x05regex\x10\x02\x42\t\n\x07_schema"G\n\x0e\x42\x65\x61mSearchType\x12\x11\n\rDETERMINISTIC\x10\x00\x12\x0e\n\nSTOCHASTIC\x10\x01\x12\x12\n\x0eNAIVE_SAMPLING\x10\x02\x42\t\n\x07_streamB\x08\n\x06_modelB\t\n\x07_promptB\x17\n\x15_timeout_microsecondsB\r\n\x0b_max_tokensB\x13\n\x11_max_total_tokensB\r\n\x0b_min_tokensB\x13\n\x11_min_total_tokensB\x04\n\x02_nB\x0c\n\n_num_beamsB\x11\n\x0f_length_penaltyB\x11\n\x0f_early_stoppingB\x12\n\x10_no_repeat_ngramB\x1a\n\x18_encoder_no_repeat_ngramB\x15\n\x13_repetition_penaltyB\x1d\n\x1b_encoder_repetition_penaltyB\x14\n\x12_frequency_penaltyB\x13\n\x11_presence_penaltyB\x0e\n\x0c_temperatureB\x08\n\x06_top_kB\x08\n\x06_top_pB\x13\n\x11_beam_search_typeB \n\x1e_beam_compat_pre_normalizationB$\n"_beam_compat_no_post_normalizationB\x18\n\x16_include_output_logitsB\x1a\n\x18_include_output_logprobsB\x12\n\x10_response_format"\x9e\x01\n\x15V1CompletionsResponse\x12\x30\n\x05\x65vent\x18\x01 \x01(\x0e\x32!.orca.V1CompletionsResponse.Event\x12\r\n\x05token\x18\x02 \x03(\x05\x12\x11\n\x04text\x18\x03 \x01(\tH\x00\x88\x01\x01"(\n\x05\x45vent\x12\x11\n\rTOKEN_SAMPLED\x10\x00\x12\x0c\n\x08\x43OMPLETE\x10\x01\x42\x07\n\x05_text2`\n\x15TextGenerationService\x12G\n\x08Generate\x12\x1a.orca.V1CompletionsRequest\x1a\x1b.orca.V1CompletionsResponse"\x00\x30\x01\x62\x06proto3'
)

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(
    DESCRIPTOR, "friendli.schema.api.v1.codegen.completions_pb2", _globals
)
if not _descriptor._USE_C_DESCRIPTORS:
    DESCRIPTOR._loaded_options = None
    _globals["_V1COMPLETIONSREQUEST"]._serialized_start = 59
    _globals["_V1COMPLETIONSREQUEST"]._serialized_end = 2076
    _globals["_V1COMPLETIONSREQUEST_TOKENSEQUENCE"]._serialized_start = 1278
    _globals["_V1COMPLETIONSREQUEST_TOKENSEQUENCE"]._serialized_end = 1309
    _globals["_V1COMPLETIONSREQUEST_RESPONSEFORMAT"]._serialized_start = 1312
    _globals["_V1COMPLETIONSREQUEST_RESPONSEFORMAT"]._serialized_end = 1468
    _globals["_V1COMPLETIONSREQUEST_RESPONSEFORMAT_TYPE"]._serialized_start = 1413
    _globals["_V1COMPLETIONSREQUEST_RESPONSEFORMAT_TYPE"]._serialized_end = 1457
    _globals["_V1COMPLETIONSREQUEST_BEAMSEARCHTYPE"]._serialized_start = 1470
    _globals["_V1COMPLETIONSREQUEST_BEAMSEARCHTYPE"]._serialized_end = 1541
    _globals["_V1COMPLETIONSRESPONSE"]._serialized_start = 2079
    _globals["_V1COMPLETIONSRESPONSE"]._serialized_end = 2237
    _globals["_V1COMPLETIONSRESPONSE_EVENT"]._serialized_start = 2188
    _globals["_V1COMPLETIONSRESPONSE_EVENT"]._serialized_end = 2228
    _globals["_TEXTGENERATIONSERVICE"]._serialized_start = 2239
    _globals["_TEXTGENERATIONSERVICE"]._serialized_end = 2335
# @@protoc_insertion_point(module_scope)
