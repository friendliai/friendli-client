[tox]
min_version = 4.0
env_list =
    py{310,39,38}
skipsdist = true
skip_install = true

[testenv]
description = run unittests
deps =
    poetry>=1.5.1,<1.5.2
allowlist_externals =
    rm
    poetry
commands_pre =
    poetry install --with dev --all-extras
    pip install torch --index-url https://download.pytorch.org/whl/cpu
commands =
    pytest -c pyproject.toml -x --cov-append tests
    coverage report -m --rcfile pyproject.toml
    rm .coverage

[testenv:format]
description = run formatting
commands_pre = poetry install --only dev
commands =
    python scripts/license_header.py --config pyproject.toml periflow tests scripts
    isort --settings-path pyproject.toml periflow tests scripts
    black --config pyproject.toml periflow tests scripts

[testenv:lint]
description = run linters
commands_pre =
    poetry install --with dev,docs --all-extras
    pip install torch --index-url https://download.pytorch.org/whl/cpu
commands = 
    isort --settings-path pyproject.toml --check periflow tests scripts
    black --config pyproject.toml --check periflow tests scripts
    mypy --config-file pyproject.toml --show-traceback periflow
    pylint -j 4 --rcfile pyproject.toml periflow
    pydocstyle --config pyproject.toml periflow

[testenv:autodoc]
description = autogen docs
commands_pre = poetry install --with docs --all-extras
commands =
    python scripts/autogen_cli_docs.py -o docs/docs/cli -f
    python scripts/autogen_sdk_docs.py \
        periflow/sdk/resource/catalog.py \
        periflow/sdk/resource/checkpoint.py \
        periflow/sdk/resource/deployment.py \
        periflow/sdk/resource/credential.py \
        periflow/sdk/init.py \
        -o docs/docs/sdk/resource -f
    python scripts/autogen_sdk_docs.py \
        periflow/sdk/api/completion.py \
        -o docs/docs/sdk/api -f
